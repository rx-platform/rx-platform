
/****************************************************************************
* This file is automatically generated by <opcgen-nodes> tool
*
* Generated at:5/31/2022 2:38 PM
*
****************************************************************************/

#include "pch.h"
#include "rx_opcua_std.h"

namespace protocols {
namespace opcua {
namespace opcua_addr_space {

rx_result build_standard_address_space_UANodeSet2(opcua_std_address_space& server)
{
	opcua_std_node node;

	// Reference Type References
	node = opcua_std_node();
	node.node_id = 31;
	node.name = "References";
	node.inverse_name = "";
	node.bit_data[opcua_std_node::abstract_idx] = true;
	node.bit_data[opcua_std_node::symmetric_idx] = true;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type NonHierarchicalReferences
	node = opcua_std_node();
	node.node_id = 32;
	node.name = "NonHierarchicalReferences";
	node.inverse_name = "";
	node.bit_data[opcua_std_node::abstract_idx] = true;
	node.bit_data[opcua_std_node::symmetric_idx] = true;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HierarchicalReferences
	node = opcua_std_node();
	node.node_id = 33;
	node.name = "HierarchicalReferences";
	node.inverse_name = "InverseHierarchicalReferences";
	node.bit_data[opcua_std_node::abstract_idx] = true;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasChild
	node = opcua_std_node();
	node.node_id = 34;
	node.name = "HasChild";
	node.inverse_name = "ChildOf";
	node.bit_data[opcua_std_node::abstract_idx] = true;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type Organizes
	node = opcua_std_node();
	node.node_id = 35;
	node.name = "Organizes";
	node.inverse_name = "OrganizedBy";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasEventSource
	node = opcua_std_node();
	node.node_id = 36;
	node.name = "HasEventSource";
	node.inverse_name = "EventSourceOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasModellingRule
	node = opcua_std_node();
	node.node_id = 37;
	node.name = "HasModellingRule";
	node.inverse_name = "ModellingRuleOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasEncoding
	node = opcua_std_node();
	node.node_id = 38;
	node.name = "HasEncoding";
	node.inverse_name = "EncodingOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasDescription
	node = opcua_std_node();
	node.node_id = 39;
	node.name = "HasDescription";
	node.inverse_name = "DescriptionOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasTypeDefinition
	node = opcua_std_node();
	node.node_id = 40;
	node.name = "HasTypeDefinition";
	node.inverse_name = "TypeDefinitionOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type GeneratesEvent
	node = opcua_std_node();
	node.node_id = 41;
	node.name = "GeneratesEvent";
	node.inverse_name = "GeneratedBy";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type Aggregates
	node = opcua_std_node();
	node.node_id = 44;
	node.name = "Aggregates";
	node.inverse_name = "AggregatedBy";
	node.bit_data[opcua_std_node::abstract_idx] = true;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasSubtype
	node = opcua_std_node();
	node.node_id = 45;
	node.name = "HasSubtype";
	node.inverse_name = "SubtypeOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasProperty
	node = opcua_std_node();
	node.node_id = 46;
	node.name = "HasProperty";
	node.inverse_name = "PropertyOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasComponent
	node = opcua_std_node();
	node.node_id = 47;
	node.name = "HasComponent";
	node.inverse_name = "ComponentOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasNotifier
	node = opcua_std_node();
	node.node_id = 48;
	node.name = "HasNotifier";
	node.inverse_name = "NotifierOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasOrderedComponent
	node = opcua_std_node();
	node.node_id = 49;
	node.name = "HasOrderedComponent";
	node.inverse_name = "OrderedComponentOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type FromState
	node = opcua_std_node();
	node.node_id = 51;
	node.name = "FromState";
	node.inverse_name = "ToTransition";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type ToState
	node = opcua_std_node();
	node.node_id = 52;
	node.name = "ToState";
	node.inverse_name = "FromTransition";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasCause
	node = opcua_std_node();
	node.node_id = 53;
	node.name = "HasCause";
	node.inverse_name = "MayBeCausedBy";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasEffect
	node = opcua_std_node();
	node.node_id = 54;
	node.name = "HasEffect";
	node.inverse_name = "MayBeEffectedBy";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasHistoricalConfiguration
	node = opcua_std_node();
	node.node_id = 56;
	node.name = "HasHistoricalConfiguration";
	node.inverse_name = "HistoricalConfigurationOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasSubStateMachine
	node = opcua_std_node();
	node.node_id = 117;
	node.name = "HasSubStateMachine";
	node.inverse_name = "SubStateMachineOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasArgumentDescription
	node = opcua_std_node();
	node.node_id = 129;
	node.name = "HasArgumentDescription";
	node.inverse_name = "ArgumentDescriptionOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasOptionalInputArgumentDescription
	node = opcua_std_node();
	node.node_id = 131;
	node.name = "HasOptionalInputArgumentDescription";
	node.inverse_name = "OptionalInputArgumentDescriptionOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type AlwaysGeneratesEvent
	node = opcua_std_node();
	node.node_id = 3065;
	node.name = "AlwaysGeneratesEvent";
	node.inverse_name = "AlwaysGeneratedBy";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasTrueSubState
	node = opcua_std_node();
	node.node_id = 9004;
	node.name = "HasTrueSubState";
	node.inverse_name = "IsTrueSubStateOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasFalseSubState
	node = opcua_std_node();
	node.node_id = 9005;
	node.name = "HasFalseSubState";
	node.inverse_name = "IsFalseSubStateOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasCondition
	node = opcua_std_node();
	node.node_id = 9006;
	node.name = "HasCondition";
	node.inverse_name = "IsConditionOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasPubSubConnection
	node = opcua_std_node();
	node.node_id = 14476;
	node.name = "HasPubSubConnection";
	node.inverse_name = "PubSubConnectionOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type DataSetToWriter
	node = opcua_std_node();
	node.node_id = 14936;
	node.name = "DataSetToWriter";
	node.inverse_name = "WriterToDataSet";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasGuard
	node = opcua_std_node();
	node.node_id = 15112;
	node.name = "HasGuard";
	node.inverse_name = "GuardOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasDataSetWriter
	node = opcua_std_node();
	node.node_id = 15296;
	node.name = "HasDataSetWriter";
	node.inverse_name = "IsWriterInGroup";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasDataSetReader
	node = opcua_std_node();
	node.node_id = 15297;
	node.name = "HasDataSetReader";
	node.inverse_name = "IsReaderInGroup";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasAlarmSuppressionGroup
	node = opcua_std_node();
	node.node_id = 16361;
	node.name = "HasAlarmSuppressionGroup";
	node.inverse_name = "IsAlarmSuppressionGroupOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type AlarmGroupMember
	node = opcua_std_node();
	node.node_id = 16362;
	node.name = "AlarmGroupMember";
	node.inverse_name = "MemberOfAlarmGroup";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasEffectDisable
	node = opcua_std_node();
	node.node_id = 17276;
	node.name = "HasEffectDisable";
	node.inverse_name = "MayBeDisabledBy";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasDictionaryEntry
	node = opcua_std_node();
	node.node_id = 17597;
	node.name = "HasDictionaryEntry";
	node.inverse_name = "DictionaryEntryOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasInterface
	node = opcua_std_node();
	node.node_id = 17603;
	node.name = "HasInterface";
	node.inverse_name = "InterfaceOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasAddIn
	node = opcua_std_node();
	node.node_id = 17604;
	node.name = "HasAddIn";
	node.inverse_name = "AddInOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasEffectEnable
	node = opcua_std_node();
	node.node_id = 17983;
	node.name = "HasEffectEnable";
	node.inverse_name = "MayBeEnabledBy";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasEffectSuppressed
	node = opcua_std_node();
	node.node_id = 17984;
	node.name = "HasEffectSuppressed";
	node.inverse_name = "MayBeSuppressedBy";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasEffectUnsuppressed
	node = opcua_std_node();
	node.node_id = 17985;
	node.name = "HasEffectUnsuppressed";
	node.inverse_name = "MayBeUnsuppressedBy";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasWriterGroup
	node = opcua_std_node();
	node.node_id = 18804;
	node.name = "HasWriterGroup";
	node.inverse_name = "IsWriterGroupOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasReaderGroup
	node = opcua_std_node();
	node.node_id = 18805;
	node.name = "HasReaderGroup";
	node.inverse_name = "IsReaderGroupOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type AliasFor
	node = opcua_std_node();
	node.node_id = 23469;
	node.name = "AliasFor";
	node.inverse_name = "HasAlias";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type IsDeprecated
	node = opcua_std_node();
	node.node_id = 23562;
	node.name = "IsDeprecated";
	node.inverse_name = "Deprecates";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasStructuredComponent
	node = opcua_std_node();
	node.node_id = 24136;
	node.name = "HasStructuredComponent";
	node.inverse_name = "IsStructuredComponentOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type AssociatedWith
	node = opcua_std_node();
	node.node_id = 24137;
	node.name = "AssociatedWith";
	node.inverse_name = "";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = true;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type UsesPriorityMappingTable
	node = opcua_std_node();
	node.node_id = 25237;
	node.name = "UsesPriorityMappingTable";
	node.inverse_name = "UsedByNetworkInterface";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasLowerLayerInterface
	node = opcua_std_node();
	node.node_id = 25238;
	node.name = "HasLowerLayerInterface";
	node.inverse_name = "HasHigherLayerInterface";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type IsExecutableOn
	node = opcua_std_node();
	node.node_id = 25253;
	node.name = "IsExecutableOn";
	node.inverse_name = "CanExecute";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type Controls
	node = opcua_std_node();
	node.node_id = 25254;
	node.name = "Controls";
	node.inverse_name = "IsControlledBy";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type Utilizes
	node = opcua_std_node();
	node.node_id = 25255;
	node.name = "Utilizes";
	node.inverse_name = "IsUtilizedBy";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type Requires
	node = opcua_std_node();
	node.node_id = 25256;
	node.name = "Requires";
	node.inverse_name = "IsRequiredBy";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type IsPhysicallyConnectedTo
	node = opcua_std_node();
	node.node_id = 25257;
	node.name = "IsPhysicallyConnectedTo";
	node.inverse_name = "";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = true;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type RepresentsSameEntityAs
	node = opcua_std_node();
	node.node_id = 25258;
	node.name = "RepresentsSameEntityAs";
	node.inverse_name = "";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = true;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type RepresentsSameHardwareAs
	node = opcua_std_node();
	node.node_id = 25259;
	node.name = "RepresentsSameHardwareAs";
	node.inverse_name = "";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = true;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type RepresentsSameFunctionalityAs
	node = opcua_std_node();
	node.node_id = 25260;
	node.name = "RepresentsSameFunctionalityAs";
	node.inverse_name = "";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = true;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type IsHostedBy
	node = opcua_std_node();
	node.node_id = 25261;
	node.name = "IsHostedBy";
	node.inverse_name = "Hosts";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasPhysicalComponent
	node = opcua_std_node();
	node.node_id = 25262;
	node.name = "HasPhysicalComponent";
	node.inverse_name = "PhysicalComponentOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasContainedComponent
	node = opcua_std_node();
	node.node_id = 25263;
	node.name = "HasContainedComponent";
	node.inverse_name = "ContainedComponentOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasAttachedComponent
	node = opcua_std_node();
	node.node_id = 25264;
	node.name = "HasAttachedComponent";
	node.inverse_name = "AttachedComponentOf";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type IsExecutingOn
	node = opcua_std_node();
	node.node_id = 25265;
	node.name = "IsExecutingOn";
	node.inverse_name = "Executes";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	// Reference Type HasPushedSecurityGroup
	node = opcua_std_node();
	node.node_id = 25345;
	node.name = "HasPushedSecurityGroup";
	node.inverse_name = "HasPushTarget";
	node.bit_data[opcua_std_node::abstract_idx] = false;
	node.bit_data[opcua_std_node::symmetric_idx] = false;
	server.registered_nodes_.push_back(std::move(node));

	return true;
} // build_standard_address_space

} //namespace protocols
} //namespace opcua
} //namespace opcua_addr_space
