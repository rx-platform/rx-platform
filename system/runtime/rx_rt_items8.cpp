

/****************************************************************************
*
*  system\runtime\rx_rt_items8.cpp
*
*  Copyright (c) 2020-2023 ENSACO Solutions doo
*  Copyright (c) 2018-2019 Dusan Ciric
*
*
*  This file is part of {rx-platform}
*
*
*  {rx-platform} is free software: you can redistribute it and/or modify
*  it under the terms of the GNU General Public License as published by
*  the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  {rx-platform} is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU General Public License for more details.
*
*  You should have received a copy of the GNU General Public License
*  along with {rx-platform}. It is also available in any {rx-platform} console
*  via <license> command. If not, see <http://www.gnu.org/licenses/>.
*
****************************************************************************/


#include "pch.h"



#include "system/runtime/rx_rt_item_types.cpp"

namespace rx_platform {
namespace runtime {
namespace structure {

//*********************************************************************************************************
//*                      CODE GENERATED BY GenerateRuntimeItemBoringStuff tool!!!                         *
//*********************************************************************************************************
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	empty<source_data>,
	empty<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xe0>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	empty<source_data>,
	empty<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xe1>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	empty<source_data>,
	empty<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xe2>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	empty<source_data>,
	empty<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xe3>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	has<source_data>,
	empty<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xe4>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	has<source_data>,
	empty<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xe5>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	has<source_data>,
	empty<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xe6>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	has<source_data>,
	empty<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xe7>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	empty<source_data>,
	has<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xe8>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	empty<source_data>,
	has<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xe9>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	empty<source_data>,
	has<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xea>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	empty<source_data>,
	has<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xeb>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	has<source_data>,
	has<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xec>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	has<source_data>,
	has<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xed>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	has<source_data>,
	has<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xee>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	has<source_data>,
	has<mapper_data>,
	empty<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xef>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	empty<source_data>,
	empty<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xf0>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	empty<source_data>,
	empty<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xf1>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	empty<source_data>,
	empty<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xf2>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	empty<source_data>,
	empty<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xf3>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	has<source_data>,
	empty<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xf4>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	has<source_data>,
	empty<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xf5>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	has<source_data>,
	empty<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xf6>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	has<source_data>,
	empty<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xf7>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	empty<source_data>,
	has<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xf8>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	empty<source_data>,
	has<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xf9>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	empty<source_data>,
	has<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xfa>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	empty<source_data>,
	has<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xfb>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	has<source_data>,
	has<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xfc>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	empty<array_wrapper<struct_data>>,
	has<source_data>,
	has<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xfd>;
template class runtime_data<
	empty<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	has<source_data>,
	has<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xfe>;
template class runtime_data<
	has<array_wrapper<variable_data>>,
	has<array_wrapper<struct_data>>,
	has<source_data>,
	has<mapper_data>,
	has<filter_data>,
	has<event_data>,
	has<array_wrapper<value_block_data>>,
	has<array_wrapper<variable_block_data>>,
	0xff>;
//*********************************************************************************************************






} // namespace structure
} // namespace runtime
} // namespace rx_platform

